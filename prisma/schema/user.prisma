model User {
    dbId   String @id @default(uuid())
    userId String @unique
    email  String @unique

    avatarUrl   String?
    displayName String

    mainGroupId String?

    mainLoginType Platforms
    loginMethods  LoginMethod[]

    groupPermissions    GroupPermission[]
    categoryPermissions CategoryPermission[]
    boardPermissions    BoardPermission[]

    sessions       Session[]
    createdEvents  Event[]
    createdInvites Invite[]
}

model Session {
    dbId String @id @default(uuid())

    token String @unique

    device            Device?
    locationEncrypted String?

    userId String
    user   User   @relation(fields: [userId], references: [userId], onDelete: Cascade)

    createdAt DateTime @default(now())
    expiresAt DateTime
    lastUsed  DateTime @default(now())

    @@index([userId])
    @@index([expiresAt])
}

model LoginMethod {
    dbId String @id @default(uuid())

    platform      Platforms
    platformEmail String

    userId String
    user   User   @relation(fields: [userId], references: [userId], onDelete: Cascade)

    @@unique([platform, platformEmail])
}
